{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ML Training Run Configuration Schema",
  "description": "Schema for validating training run configurations",
  "type": "object",
  "required": [
    "run_id",
    "dataset",
    "model",
    "epochs",
    "batch_size",
    "learning_rate"
  ],
  "properties": {
    "run_id": {
      "type": "string",
      "description": "Unique identifier for the training run",
      "pattern": "^run_[0-9]{8}_[0-9]{6}$",
      "examples": ["run_20241215_143022"]
    },
    "run_label": {
      "type": "string",
      "description": "Human-readable label for the run",
      "maxLength": 100,
      "examples": ["CNN baseline", "LSTM with augmentation"]
    },
    "dataset": {
      "type": "string",
      "description": "Name/ID of the dataset to use",
      "examples": ["skeleton_001", "images_fashion_mnist", "csv_tabular_001"]
    },
    "dataset_type": {
      "type": "string",
      "enum": ["skeleton", "image", "csv"],
      "description": "Type of dataset"
    },
    "model": {
      "type": "string",
      "enum": ["1D-CNN", "BiLSTM", "1D-CNN + BiLSTM", "CNN-Small", "MobileNetV2", "Custom CNN", "MLP", "Random Forest", "XGBoost"],
      "description": "Model architecture to use"
    },
    "epochs": {
      "type": "integer",
      "minimum": 1,
      "maximum": 1000,
      "description": "Number of training epochs"
    },
    "batch_size": {
      "type": "integer",
      "enum": [8, 16, 32, 64, 128, 256],
      "description": "Batch size for training"
    },
    "learning_rate": {
      "type": "number",
      "minimum": 0.0001,
      "maximum": 1.0,
      "description": "Learning rate for optimization"
    },
    "window_length": {
      "type": "integer",
      "minimum": 8,
      "maximum": 512,
      "description": "Window length for skeleton sequence data",
      "default": 64
    },
    "stride": {
      "type": "integer",
      "minimum": 1,
      "description": "Stride for windowing skeleton data",
      "default": 32
    },
    "class_balancing": {
      "type": "boolean",
      "description": "Whether to apply class balancing",
      "default": true
    },
    "early_stopping": {
      "type": "boolean",
      "description": "Whether to use early stopping",
      "default": true
    },
    "early_stopping_patience": {
      "type": "integer",
      "minimum": 1,
      "maximum": 50,
      "description": "Patience for early stopping",
      "default": 10
    },
    "use_mlflow": {
      "type": "boolean",
      "description": "Whether to use MLflow for tracking",
      "default": true
    },
    "validation_split": {
      "type": "number",
      "minimum": 0.1,
      "maximum": 0.5,
      "description": "Fraction of data to use for validation",
      "default": 0.2
    },
    "test_split": {
      "type": "number",
      "minimum": 0.1,
      "maximum": 0.5,
      "description": "Fraction of data to use for testing",
      "default": 0.2
    },
    "random_seed": {
      "type": "integer",
      "minimum": 0,
      "description": "Random seed for reproducibility",
      "default": 42
    },
    "gpu_device": {
      "type": ["integer", "null"],
      "minimum": 0,
      "description": "GPU device to use (null for CPU)"
    },
    "model_params": {
      "type": "object",
      "description": "Model-specific hyperparameters",
      "properties": {
        "filters": {
          "type": "array",
          "items": {"type": "integer", "minimum": 1},
          "description": "Filter sizes for CNN layers"
        },
        "kernel_sizes": {
          "type": "array",
          "items": {"type": "integer", "minimum": 1},
          "description": "Kernel sizes for CNN layers"
        },
        "lstm_units": {
          "type": "array",
          "items": {"type": "integer", "minimum": 1},
          "description": "LSTM unit sizes"
        },
        "hidden_units": {
          "type": "array",
          "items": {"type": "integer", "minimum": 1},
          "description": "Hidden layer sizes for MLP"
        },
        "dropout_rate": {
          "type": "number",
          "minimum": 0.0,
          "maximum": 0.9,
          "description": "Dropout rate"
        },
        "recurrent_dropout": {
          "type": "number",
          "minimum": 0.0,
          "maximum": 0.9,
          "description": "Recurrent dropout rate for LSTM"
        },
        "trainable_layers": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of trainable layers for transfer learning"
        }
      },
      "additionalProperties": false
    },
    "augmentation": {
      "type": "object",
      "description": "Data augmentation settings",
      "properties": {
        "rotation": {
          "type": "boolean",
          "description": "Apply rotation augmentation",
          "default": false
        },
        "jitter": {
          "type": "boolean",
          "description": "Apply jitter/noise augmentation",
          "default": false
        },
        "speed_scale": {
          "type": "boolean",
          "description": "Apply speed scaling for temporal data",
          "default": false
        },
        "horizontal_flip": {
          "type": "boolean",
          "description": "Apply horizontal flip for images",
          "default": false
        },
        "brightness": {
          "type": "boolean",
          "description": "Apply brightness augmentation for images",
          "default": false
        },
        "contrast": {
          "type": "boolean",
          "description": "Apply contrast augmentation for images",
          "default": false
        }
      },
      "additionalProperties": false
    },
    "preprocessing": {
      "type": "object",
      "description": "Data preprocessing settings",
      "properties": {
        "root_joint": {
          "type": "string",
          "enum": ["wrist", "torso", "hip", "shoulder"],
          "description": "Root joint for skeleton normalization",
          "default": "wrist"
        },
        "scale_normalize": {
          "type": "boolean",
          "description": "Apply scale normalization",
          "default": true
        },
        "interpolate_missing": {
          "type": "boolean",
          "description": "Interpolate missing joint data",
          "default": true
        },
        "max_missing_ratio": {
          "type": "number",
          "minimum": 0.0,
          "maximum": 1.0,
          "description": "Maximum allowed missing data ratio per joint",
          "default": 0.3
        }
      },
      "additionalProperties": false
    },
    "callbacks": {
      "type": "object",
      "description": "Training callback settings",
      "properties": {
        "checkpoint_monitor": {
          "type": "string",
          "enum": ["val_loss", "val_accuracy", "loss", "accuracy"],
          "description": "Metric to monitor for checkpointing",
          "default": "val_loss"
        },
        "reduce_lr_patience": {
          "type": "integer",
          "minimum": 1,
          "description": "Patience for learning rate reduction",
          "default": 5
        },
        "reduce_lr_factor": {
          "type": "number",
          "minimum": 0.1,
          "maximum": 0.9,
          "description": "Factor for learning rate reduction",
          "default": 0.5
        }
      },
      "additionalProperties": false
    },
    "export": {
      "type": "object",
      "description": "Model export settings",
      "properties": {
        "save_weights_only": {
          "type": "boolean",
          "description": "Save only weights instead of full model",
          "default": false
        },
        "export_tflite": {
          "type": "boolean",
          "description": "Export model to TensorFlow Lite",
          "default": false
        },
        "export_onnx": {
          "type": "boolean",
          "description": "Export model to ONNX format",
          "default": false
        },
        "tflite_quantization": {
          "type": "string",
          "enum": ["float16", "int8", "dynamic"],
          "description": "TensorFlow Lite quantization type",
          "default": "float16"
        }
      },
      "additionalProperties": false
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Run creation timestamp"
        },
        "git_commit": {
          "type": "string",
          "description": "Git commit hash",
          "pattern": "^[a-f0-9]{8}$"
        },
        "python_version": {
          "type": "string",
          "description": "Python version used"
        },
        "tensorflow_version": {
          "type": "string",
          "description": "TensorFlow version used"
        },
        "description": {
          "type": "string",
          "maxLength": 500,
          "description": "Detailed description of the experiment"
        },
        "tags": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Tags for categorizing runs"
        }
      },
      "additionalProperties": true
    }
  },
  "additionalProperties": false,
  "examples": [
    {
      "run_id": "run_20241215_143022",
      "run_label": "1D-CNN baseline for gesture recognition",
      "dataset": "skeleton_gestures_001",
      "dataset_type": "skeleton",
      "model": "1D-CNN",
      "epochs": 50,
      "batch_size": 32,
      "learning_rate": 0.001,
      "window_length": 64,
      "stride": 32,
      "class_balancing": true,
      "early_stopping": true,
      "use_mlflow": true,
      "model_params": {
        "filters": [64, 128, 256],
        "kernel_sizes": [5, 3, 3],
        "dropout_rate": 0.3
      },
      "augmentation": {
        "rotation": true,
        "jitter": true,
        "speed_scale": false
      },
      "preprocessing": {
        "root_joint": "wrist",
        "scale_normalize": true,
        "interpolate_missing": true
      }
    }
  ]
}
